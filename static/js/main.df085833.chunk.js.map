{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchMovie/SearchMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchMovie","state","query","htmlFor","type","id","name","value","this","onChange","event","target","setState","props","handleChange","placeholder","React","Component","App","moviesFromServer","trim","toLowerCase","length","filter","film","includes","ReactDOM","render","document","getElementById"],"mappings":"uwEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,4CAKE,WAAU,IAAD,OACP,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOc,QAAQ,eAAed,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEe,KAAK,OACLC,GAAG,eACHC,KAAK,QACLC,MAAOC,KAAKP,MAAMC,MAClBO,SAAU,SAACC,GAAW,IAAD,EACKA,EAAMC,OAAtBL,EADW,EACXA,KAAMC,EADK,EACLA,MAEd,EAAKK,SAAL,eAAiBN,EAAOC,IAExB,EAAKM,MAAMC,aAAaP,IAE1BlB,UAAU,QACV0B,YAAY,4BA3B1B,GAAiCC,IAAMC,W,OCG1BC,EAAb,4MACEjB,MAAQ,CACNN,OAAO,YAAKwB,IAFhB,EAKEL,aAAe,SAACP,GACd,IAAMV,EAAQU,EAAMa,OAAOC,cAE3B,EAAKT,SAAS,CACZjB,OAASE,EAAMyB,OAAS,EACpBH,EAAiBI,QAAO,SAAAC,GAAI,OAC5BA,EAAKvC,MAAQuC,EAAKtC,aAAamC,cAAcI,SAAS5B,MACtDsB,KAZV,4CAgBE,WACE,OACE,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAayB,aAAcN,KAAKM,eAChC,kBAAC,EAAD,CAAYnB,OAAQa,KAAKP,MAAMN,UAEjC,yBAAKN,UAAU,WAAf,0BAvBR,GAAyB4B,aCDzBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.df085833.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchMovie extends React.Component {\n  state = {\n    query: '',\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              name=\"query\"\n              value={this.state.query}\n              onChange={(event) => {\n                const { name, value } = event.target;\n\n                this.setState({ [name]: value });\n\n                this.props.handleChange(value);\n              }}\n              className=\"input\"\n              placeholder=\"Type search word\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchMovie.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { SearchMovie } from './components/SearchMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  }\n\n  handleChange = (value) => {\n    const movie = value.trim().toLowerCase();\n\n    this.setState({\n      movies: (movie.length > 0)\n        ? moviesFromServer.filter(film => (\n          film.title + film.description).toLowerCase().includes(movie))\n        : moviesFromServer,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchMovie handleChange={this.handleChange} />\n          <MoviesList movies={this.state.movies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}